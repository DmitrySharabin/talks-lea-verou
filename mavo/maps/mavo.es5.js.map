{"version":3,"sources":["functions.js"],"names":[],"mappings":"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","file":"mavo.es5.js","sourcesContent":["/**\n * Functions available inside Mavo expressions\n */\n\n(function() {\n\nvar _ = Mavo.Functions = {\n\toperators: {\n\t\t\"=\": \"eq\"\n\t},\n\n\tget now() {\n\t\treturn new Date();\n\t},\n\n\t/**\n\t * Aggregate sum\n\t */\n\tsum: function(array) {\n\t\treturn numbers(array, arguments).reduce((prev, current) => {\n\t\t\treturn +prev + (+current || 0);\n\t\t}, 0);\n\t},\n\n\t/**\n\t * Average of an array of numbers\n\t */\n\taverage: function(array) {\n\t\tarray = numbers(array, arguments);\n\n\t\treturn array.length && _.sum(array) / array.length;\n\t},\n\n\t/**\n\t * Min of an array of numbers\n\t */\n\tmin: function(array) {\n\t\treturn Math.min(...numbers(array, arguments));\n\t},\n\n\t/**\n\t * Max of an array of numbers\n\t */\n\tmax: function(array) {\n\t\treturn Math.max(...numbers(array, arguments));\n\t},\n\n\tcount: function(array) {\n\t\treturn Mavo.toArray(array).filter(a => a !== null && a !== false && a !== \"\").length;\n\t},\n\n\tround: function(num, decimals) {\n\t\tif (!num || !decimals || !isFinite(num)) {\n\t\t\treturn Math.round(num);\n\t\t}\n\n\t\treturn +num.toLocaleString(\"en-US\", {\n\t\t\tuseGrouping: false,\n\t\t\tmaximumFractionDigits: decimals\n\t\t});\n\t},\n\n\tiff: function(condition, iftrue, iffalse=\"\") {\n\t\tif (Array.isArray(condition)) {\n\t\t\treturn condition.map((c, i) => {\n\t\t\t\tvar ret = c? iftrue : iffalse;\n\n\t\t\t\tif (Array.isArray(ret)) {\n\t\t\t\t\treturn ret[Math.min(i, ret.length - 1)];\n\t\t\t\t}\n\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t}\n\n\t\treturn condition? iftrue : iffalse;\n\t},\n\n\tidify: readable => ((text || \"\") + \"\")\n\t\t.replace(/\\s+/g, \"-\") // Convert whitespace to hyphens\n\t\t.replace(/[^\\w-]/g, \"\") // Remove weird characters\n\t\t.toLowerCase()\n};\n\nMavo.Script = {\n\taddUnaryOperator: function(name, o) {\n\t\treturn operand => Array.isArray(operand)? operand.map(o.scalar) : o.scalar(operand);\n\t},\n\n\t/**\n\t * Extend a scalar operator to arrays, or arrays and scalars\n\t * The operation between arrays is applied element-wise.\n\t * The operation operation between a scalar and an array will result in\n\t * the operation being applied between the scalar and every array element.\n\t */\n\taddBinaryOperator: function(name, o) {\n\t\tif (o.symbol) {\n\t\t\t// Build map of symbols to function names for easy rewriting\n\t\t\tfor (let symbol of Mavo.toArray(o.symbol)) {\n\n\t\t\t\tMavo.Script.symbols[symbol] = name;\n\t\t\t}\n\t\t}\n\n\t\to.identity = o.identity || 0;\n\n\t\treturn _[name] = function(...operands) {\n\t\t\tif (operands.length === 1) {\n\t\t\t\tif (Array.isArray(operands[0])) {\n\t\t\t\t\t// Operand is an array of operands, expand it out\n\t\t\t\t\toperands = [...operands[0]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prev = o.logical? true : operands[0], result;\n\n\t\t\tfor (let i = 1; i < operands.length; i++) {\n\t\t\t\tlet a = o.logical? operands[i - 1] : prev;\n\t\t\t\tlet b = operands[i];\n\n\t\t\t\tif (Array.isArray(b)) {\n\t\t\t\t\tif (typeof o.identity == \"number\") {\n\t\t\t\t\t\tb = numbers(b);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\tresult = [\n\t\t\t\t\t\t\t...b.map((n, i) => o.scalar(a[i] === undefined? o.identity : a[i], n)),\n\t\t\t\t\t\t\t...a.slice(b.length)\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = b.map(n => o.scalar(a, n));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Operand is scalar\n\t\t\t\t\tif (typeof o.identity == \"number\") {\n\t\t\t\t\t\tb = +b;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\tresult = a.map(n => o.scalar(n, b));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresult = o.scalar(a, b);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (o.logical) {\n\t\t\t\t\tprev = prev && result;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tprev = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn prev;\n\t\t};\n\t},\n\n\t/**\n\t * Mapping of operator symbols to function name.\n\t * Populated via addOperator() and addLogicalOperator()\n\t */\n\tsymbols: {},\n\n\tgetOperatorName: op => Mavo.Script.symbols[op] || op,\n\n\t/**\n\t * Operations for elements and scalars.\n\t * Operations between arrays happen element-wise.\n\t * Operations between a scalar and an array will result in the operation being performed between the scalar and every array element.\n\t * Ordered by precedence (higher to lower)\n\t * @param scalar {Function} The operation between two scalars\n\t * @param identity The operation’s identity element. Defaults to 0.\n\t */\n\toperators: {\n\t\t\"not\": {\n\t\t\tscalar: a => a => !a\n\t\t},\n\t\t\"multiply\": {\n\t\t\tscalar: (a, b) => a * b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"*\"\n\t\t},\n\t\t\"divide\": {\n\t\t\tscalar: (a, b) => a / b,\n\t\t\tidentity: 1,\n\t\t\tsymbol: \"/\"\n\t\t},\n\t\t\"add\": {\n\t\t\tscalar: (a, b) => +a + +b,\n\t\t\tsymbol: \"+\"\n\t\t},\n\t\t\"subtract\": {\n\t\t\tscalar: (a, b) => a - b,\n\t\t\tsymbol: \"-\"\n\t\t},\n\n\t\t\"lte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a <= b;\n\t\t\t},\n\t\t\tsymbol: \"<=\"\n\t\t},\n\t\t\"lt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a < b;\n\t\t\t},\n\t\t\tsymbol: \"<\"\n\t\t},\n\t\t\"gte\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a >= b;\n\t\t\t},\n\t\t\tsymbol: \">=\"\n\t\t},\n\t\t\"gt\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => {\n\t\t\t\t[a, b] = Mavo.Script.getNumericalOperands(a, b);\n\t\t\t\treturn a > b;\n\t\t\t},\n\t\t\tsymbol: \">\"\n\t\t},\n\t\t\"eq\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => a == b,\n\t\t\tsymbol: [\"=\", \"==\"]\n\t\t},\n\t\t\"and\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a && !!b,\n\t\t\tidentity: true,\n\t\t\tsymbol: \"&&\"\n\t\t},\n\t\t\"or\": {\n\t\t\tlogical: true,\n\t\t\tscalar: (a, b) => !!a || !!b,\n\t\t\tidentity: false,\n\t\t\tsymbol: \"||\"\n\t\t}\n\t},\n\n\tgetNumericalOperands: function(a, b) {\n\t\tif (isNaN(a) || isNaN(b)) {\n\t\t\t// Try comparing as dates\n\t\t\tvar da = new Date(a), db = new Date(b);\n\n\t\t\tif (!isNaN(da) && !isNaN(db)) {\n\t\t\t\t// Both valid dates\n\t\t\t\treturn [da, db];\n\t\t\t}\n\t\t}\n\n\t\treturn [a, b];\n\t}\n};\n\nfor (let name in Mavo.Script.operators) {\n\tlet details = Mavo.Script.operators[name];\n\n\tif (details.scalar.length < 2) {\n\t\tMavo.Script.addUnaryOperator(name, details);\n\t}\n\telse {\n\t\tMavo.Script.addBinaryOperator(name, details);\n\t}\n}\n\nvar aliases = {\n\taverage: \"avg\",\n\tiff: \"iff IF\",\n\tsubtract: \"minus\",\n\tmultiply: \"mult product\",\n\tdivide: \"div\",\n\tlt: \"lessThan smaller\",\n\tgt: \"moreThan greater greaterThan bigger\",\n\teq: \"equal equality\"\n};\n\nfor (let name in aliases) {\n\taliases[name].split(/\\s+/g).forEach(alias => _[alias] = _[name]);\n}\n\n// Make function names case insensitive\nMavo.Functions._Trap = self.Proxy? new Proxy(_, {\n\tget: (functions, property) => {\n\t\tif (property in functions) {\n\t\t\treturn functions[property];\n\t\t}\n\n\t\tvar propertyL = property.toLowerCase && property.toLowerCase();\n\n\t\tif (propertyL && functions.hasOwnProperty(propertyL)) {\n\t\t\treturn functions[propertyL];\n\t\t}\n\n\t\tif (property in Math || propertyL in Math) {\n\t\t\treturn Math[property] || Math[propertyL];\n\t\t}\n\n\t\tif (property in self) {\n\t\t\treturn self[property];\n\t\t}\n\n\t\t// Prevent undefined at all costs\n\t\treturn property;\n\t},\n\n\t// Super ugly hack, but otherwise data is not\n\t// the local variable it should be, but the string \"data\"\n\t// so all property lookups fail.\n\thas: (functions, property) => property != \"data\"\n}) : Mavo.Functions;\n\n/**\n * Private helper methods\n */\nfunction numbers(array, args) {\n\tarray = Array.isArray(array)? array : (args? $$(args) : [array]);\n\n\treturn array.filter(number => !isNaN(number) && number !== \"\").map(n => +n);\n}\n\n})();\n"],"sourceRoot":"/source/"}