#intro {
	align-items: end;
	background: url("img/nesting-dolls.avif") no-repeat right / 140% auto;
	padding: 0;
	color: white;

	> h1 {
		margin-top: auto;
		text-align: right;
		text-shadow: 0 0 .3em hsl(0 0% 0% / .2);
		font: 100 80%/1.4 var(--font-cursive);
		margin-right: 4rem;

		> div {
			position: relative;
			z-index: -1;
			margin-top: -.7em;
			margin-bottom: .5em;
		}

		.ice,
		.fire,
		.nesting {
			font-family: var(--font-sans);
			font-weight: bold;
			font-size: 250%;
		}

		.ice,
		.fire {

		}

		.ice {
			color: hsl(200 100% 90%);

			&::before {
				content: "ðŸ§Š"
			}
		}

		.fire {
			color: hsl(30 100% 60%);

			&::before {
				content: "ðŸ”¥"
			}
		}

		.nesting {
			xdisplay: block;
			line-height: .7;

			& span {
				display: inline-block;
				border: 2px solid;
				padding: .1em .1em;
				margin-left: .2em;
				border-radius: .1em;
			}

			/* &::before {
				content: "ðŸª†"
			} */
		}
	}

	.attribution {
		align-self: stretch;
		padding: .4em .6em;
		padding-right: 4rem;
		margin-top: auto;
		margin-bottom: 0;
		background: hsl(0 0% 0% / .4);
		text-align: right;
	}
}

#css-preprocessors {
	align-items: stretch;
	overflow: clip;

	> div {
		display: flex;
		align-items: center;
		flex-flow: column;

		& img {
			height: 12vw;
		}

		> h2 {
			margin-bottom: 0;
		}

		> a {
			margin-bottom: auto;
			opacity: .5;
			font-weight: 500;
			font-size: 70%;
		}
	}

	& time {
		position: relative;
		display: block;
		margin: auto 0;
		background: black;
		color: white;
		width: max-content;
		padding: .3em .5em;
		font-weight: bold;

		&::before {
			content: "";
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate(-50%, -50%);
			z-index: -1;
			width: 50vw;
			height: .2em;
			background: inherit;
		}
	}
}

@property --angle {
	syntax: "<angle>";
	inherits: true;
	initial-value: 0deg;
}

#reactive-css-variables {
	--font-size-multiplier: .9;
	grid-template-columns: .3fr 1.6fr 1fr;

	.editor-container {
		grid-column: 2;
	}

	.demo-target {
		flex-flow: row;
		gap: .3em;
	}
}

.conversion.slide {
	> :is(div, pre):nth-of-type(2):where(*:is(:not(.delayed), .current, .displayed) + *) {
		position: relative;

		&::before {
			content: var(--arrow-label, "Result");
			position: absolute;
			right: calc(100% + 1.4em);
			top: 50%;
			z-index: 1;
			transform: translate(50%, -50%);
			padding-inline: .7em 1.2em;
			padding-block: 1.2em;
			margin-left: -1em;
			background: linear-gradient(to right var(--in-oklab), var(--color-magenta) 25%, var(--color-aqua) 75%);
			color: white;
			white-space: nowrap;
			font: bold 60%/1 var(--font-body);

			/* Clip to a right pointing arrow */
			--arrow-inset: .6em;
			--arrow-head-height: 2em;
			clip-path: polygon(
				0 var(--arrow-inset), calc(100% - var(--arrow-head-height)) var(--arrow-inset),
				calc(100% - var(--arrow-head-height)) 0,
				100% 50%,
				calc(100% - var(--arrow-head-height)) 100%,
				calc(100% - var(--arrow-head-height)) calc(100% - var(--arrow-inset)), 0 calc(100% - var(--arrow-inset))
			);

			text-transform: uppercase;
			letter-spacing: normal;
		}
	}
}

#preprocessors-vs-css {
	& .displayed {
		opacity: 1;
	}

	& :is(td, th):is(:nth-child(2), :nth-child(3)) {
		text-align: center;
	}

	& tbody {
		& th {
			font-weight: 300;
		}

		& td {
			font-weight: 500;

			&:where(:where(.current, .displayed) > *) {
				transition: .5s 1s color;

				&.win {
					color: var(--color-green);
				}

				&:not(.win) {
					color: var(--color-red);
				}
			}
		}
	}

	& tbody tr:not(:first-child) :is(td, th) {
		border-top: 1px solid var(--color-gray-80);
	}
}

@keyframes nesting-header-border {
	to {
		border-width: .4em;
	}
}

@keyframes nesting-header-outline {
	to {
		outline-width: .05em;
		outline-offset: .4em;
	}
}

#nesting {
	> h1 {
		border: 0 solid transparent;
		background-clip: padding-box;
		box-shadow: 0 0 0 .1em black;
		outline: 0 solid black;
		outline-offset: 0;
	}

	&:target > h1 {
		animation: .4s nesting-header-border both,
		           .4s .4s nesting-header-outline both;
	}
}

#when-can-we {
	color-scheme: dark;
	background: #125DCB url("img/begging.gif") no-repeat bottom right;
	background-repeat: space no-repeat;
}

@keyframes parsing-header {
	to { gap: .4em }
}

header#css-parsing-101 {
	/* background: url(https://images.unsplash.com/photo-1543393716-375f47996a77?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=4140&q=80) no-repeat top / cover; */
	background: url(img/crash.gif) no-repeat top / cover;

	> h1 {
		display: flex;
		gap: 0;
		background: transparent;
		padding: 0;
		animation: 1s 2s parsing-header both alternate infinite;

		> span {
			padding-block: .5em;
			padding-inline: .13em;
			background: black;

			&:first-child {
				padding-left: .7em
			}

			&:last-child {
				padding-right: .7em
			}
		}
	}
}

.tokenizedcss,
.language-tokenizedcss,
.language-cssgrammar {
	.token {
		color: inherit;

		&.delayed,
		&.delayed-children > *,
		&.displayed {
			opacity: 1;
		}

		&:not(.punctuation, .production) {
			padding-block: .1em .15em;
			border-radius: .2em;
			transition: .2s;
			padding-inline: .25ch;
			background: var(--background, var(--color, var(--color-gray-80)));
			outline: var(--outline);
			outline-offset: -2px;

			&.literal {
				font-weight: bold;
				mix-blend-mode: normal;
				color: color-mix(in oklch, var(--base-color) 0%, oklch(50% none none));
			}

			&.nonterminal[style*="--token-index"] {
				/* https://codepen.io/leaverou/pen/BavELRN */
				--color: oklch(.75 .05 calc(var(--token-index) * 43));
			}

			& + &:not(.language-cssgrammar *) {
				margin-left: .1em;
			}
		}

		&:is(.delayed, .delayed-children > *) {
			&:not(.current, .displayed) {
				all: unset;
			}
		}
	}

	.whitespace {
		--color: color-mix(in lab, var(--color-gray-50) 0%, lab(none none none / .5));
		--background: repeating-linear-gradient(-45deg, hsl(0 0% 0% / .1) 0 .4rem, transparent 0 .8rem) var(--color);
	}

	.hash {
		--color: var(--color-accent-1);
	}

	.ident {
		--color: var(--color-accent-2);
	}

	.function {
		--color: var(--color-accent-3);
	}

	.string {
		--color: var(--color-accent-4);
	}

	.dimension {
		--color: var(--color-accent-5);
	}

	.literal {
		--color: white;
		--outline: 2px dashed var(--color-gray-70);

		.punctuation {
			display: none;
		}
	}

	.colon {
		--base-color: var(--color-accent-1);
	}

	.semicolon {
		--base-color: var(--color-accent-2);
	}

	.openbrace,
	.closebrace {
		--base-color: var(--color-accent-3);
	}

	.openparen,
	.closeparen {
		--base-color: var(--color-accent-4);
	}

	.openbrace,
	.closebrace {
		--base-color: var(--color-accent-5);
	}

	.comma {
		--base-color: var(--color-accent-6);
	}
}

pre.language-cssgrammar {
	padding: 0;
	background: transparent;

	.token {
		margin-inline: 0;

		&:not(.punctuation, .production) {
			margin-left: -.5ch;
		}
	}
}

pre.language-tokenizedcss > code.delayed-children {
	> * {
		opacity: 1;
	}
}

.language-tokenizedcss {
	line-height: 1.6;
	--color: var(--color-aqua);
}


.legend {
	display: flex;

	&:not(.compact) {
		flex-flow: column;
	}

	> * {
		&::before {
			content: "";
			display: inline-block;
			vertical-align: -.15em;
			width: 1em;
			aspect-ratio: 1;
			margin-right: .3em;
			background: var(--background, var(--color));
			outline: var(--outline);
			outline-offset: -2px;
		}
	}
}

.grammar-cheatsheet {
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	font-size: 60%;
	background: var(--color-gray-90);
	letter-spacing: 0;
	margin: 0;

	&::before,
	& dt,
	& dd {
		padding: .3rem .7rem;
	}

	&::before,
	& dt {
		white-space: nowrap;
	}

	&::before {
		content: attr(title);
		display: flex;
		align-items: center;
		background: var(--color-gray-80);
		text-transform: uppercase;
		font-weight: 500;
		font-size: 80%;
		color: var(--color-gray-40);
	}

	& dt {
		display: flex;
		align-items: center;
		background: var(--color-gray-40);
		color: white;
		font: bold 100% var(--font-mono);
	}

	& dd {
		flex-grow: 1;
		margin-left: 0;
	}

	& dt,
	& dd {
		display: none;
	}

	&[data-show~="[]"] > [data-symbol="[]"],
	&[data-show~="|"] > [data-symbol="|"],
	&[data-show~="?"] > [data-symbol="?"],
	&[data-show~="*"] > [data-symbol="*"],
	&[data-show~="+"] > [data-symbol="+"],
	&[data-show~="#"] > [data-symbol="#"]
	 {
		&, & + dd {
			display: flex;
		}
	}
}

#tokenization {
	& pre {
		min-width: 24em;
		font-size: 130%;
	}

	.legend {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: .2em 2em;
		margin-top: 1em;

		> * {
			opacity: 0;
		}

		> .literal {
			grid-column: 1 / -1;
		}
	}

	&:has(.hash:is(.current, .displayed)) .legend > .hash,
	&:has(.ident:is(.current, .displayed)) .legend > .ident,
	&:has(.function:is(.current, .displayed)) .legend > .function,
	&:has(.string:is(.current, .displayed)) .legend > .string,
	&:has(.dimension:is(.current, .displayed)) .legend > .dimension,
	&:has(.literal:is(.current, .displayed)) .legend > .literal,
	&:has(.whitespace:is(.current, .displayed)) .legend > .whitespace {
		opacity: 1;
	}
}

#simple-selector-grammar-2 {
	& pre + pre {
		margin-left: 5ch;
	}
}

#lookahead {
	& .displayed {
		opacity: 1;
	}
}

#unbounded-lookahead {
	& pre.language-cssgrammar {
		font-size: 90%;
	}
}

@keyframes show-token {
	to {
		transform: scale(1.5);
		filter: drop-shadow(.2em .2em .5em hsl(0 0% 0% / .5))
	}
}

#resolving-ambiguity {
	& pre:first-of-type {
		margin-top: 3em;
	}

	.token {
		&:not(.openbrace, .semicolon) {
			all: unset;
		}
	}

	&:target .token {
		&.openbrace,
		&.semicolon {
			display: inline-flex;
			line-height: 1.2;
			animation: .2s show-token both alternate 2;
		}

		&.semicolon {
			animation-delay: 1s;
		}
	}
}

.historical.slide {
	& h1 {
		> time {
			position: absolute;
			top: 0;
			display: flex;
			vertical-align: 0.35em;
			padding: .2em .5em;
			width: max-content;

			--background: var(--color-accent-2);
			background: var(--background);
			font-weight: 800;
			text-transform: uppercase;
			font-size: 3.5rem;
			color: white;
		}
	}
}

#first-proposal,
#proposal2 {
	--url-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg"><text style="font:1em system-ui, sans-serif" x=".1em" y="1.5em" >https://tabatkins.github.io/specs/css-nesting/</text></svg>');
}

#proposal2 {
	.browser {
		min-width: 50vw;
	}
}